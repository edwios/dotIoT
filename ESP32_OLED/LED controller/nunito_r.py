# Code generated by font-to-py.py.
# Font: Nunito-Regular.ttf Char set: 2COVo
version = '0.26'

def height():
    return 16

def max_width():
    return 16

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 50

def max_ch():
    return 111

_font =\
b'\x0b\x00\x7c\x00\xc7\x00\x03\x00\x03\x00\x03\x00\x03\x00\x06\x00'\
b'\x0c\x00\x18\x00\x30\x00\x30\x00\x10\x00\x00\x00\x00\x00\x38\x00'\
b'\x30\x00\x0c\x00\x3e\x00\x73\x80\x41\x80\x00\xc0\x00\xc0\x00\xc0'\
b'\x01\x80\x03\x80\x07\x00\x06\x00\x0c\x00\x1c\x00\x38\x00\x70\x00'\
b'\xe0\x00\x7f\xc0\x0e\x00\x07\xc0\x1c\x60\x30\x00\x60\x00\x60\x00'\
b'\x60\x00\xe0\x00\xc0\x00\xc0\x00\xe0\x00\x60\x00\x60\x00\x60\x00'\
b'\x30\x20\x1c\x70\x0f\xc0\x10\x00\x0f\xc0\x1c\x70\x30\x38\x60\x18'\
b'\x60\x1c\x60\x0c\xe0\x0c\xc0\x0c\xc0\x0c\xe0\x0c\x60\x0c\x60\x1c'\
b'\x60\x18\x30\x38\x1c\x70\x0f\xc0\x0d\x00\x80\x30\xc0\x30\xc0\x70'\
b'\xc0\x60\x60\x60\x60\xe0\x60\xc0\x30\xc0\x31\xc0\x31\x80\x19\x80'\
b'\x1b\x80\x1b\x00\x0f\x00\x0e\x00\x06\x00\x0c\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x1e\x00\x73\x80\x61\x80\xc0\xc0\xc0\xc0'\
b'\xc0\xc0\xc0\xc0\xc0\xc0\x61\x80\x73\x80\x1e\x00'

_index =\
b'\x00\x00\x22\x00\x22\x00\x44\x00\x00\x00\x22\x00\x00\x00\x22\x00'\
b'\x00\x00\x22\x00\x00\x00\x22\x00\x00\x00\x22\x00\x00\x00\x22\x00'\
b'\x00\x00\x22\x00\x00\x00\x22\x00\x00\x00\x22\x00\x00\x00\x22\x00'\
b'\x00\x00\x22\x00\x00\x00\x22\x00\x00\x00\x22\x00\x00\x00\x22\x00'\
b'\x00\x00\x22\x00\x00\x00\x22\x00\x44\x00\x66\x00\x00\x00\x22\x00'\
b'\x00\x00\x22\x00\x00\x00\x22\x00\x00\x00\x22\x00\x00\x00\x22\x00'\
b'\x00\x00\x22\x00\x00\x00\x22\x00\x00\x00\x22\x00\x00\x00\x22\x00'\
b'\x00\x00\x22\x00\x00\x00\x22\x00\x66\x00\x88\x00\x00\x00\x22\x00'\
b'\x00\x00\x22\x00\x00\x00\x22\x00\x00\x00\x22\x00\x00\x00\x22\x00'\
b'\x00\x00\x22\x00\x88\x00\xaa\x00\x00\x00\x22\x00\x00\x00\x22\x00'\
b'\x00\x00\x22\x00\x00\x00\x22\x00\x00\x00\x22\x00\x00\x00\x22\x00'\
b'\x00\x00\x22\x00\x00\x00\x22\x00\x00\x00\x22\x00\x00\x00\x22\x00'\
b'\x00\x00\x22\x00\x00\x00\x22\x00\x00\x00\x22\x00\x00\x00\x22\x00'\
b'\x00\x00\x22\x00\x00\x00\x22\x00\x00\x00\x22\x00\x00\x00\x22\x00'\
b'\x00\x00\x22\x00\x00\x00\x22\x00\x00\x00\x22\x00\x00\x00\x22\x00'\
b'\x00\x00\x22\x00\x00\x00\x22\x00\xaa\x00\xcc\x00'

_mvfont = memoryview(_font)

def get_ch(ch):
    ordch = ord(ch)
    ordch = ordch + 1 if ordch >= 50 and ordch <= 111 else 63
    idx_offs = 4 * (ordch - 50)
    offset = int.from_bytes(_index[idx_offs : idx_offs + 2], 'little')
    next_offs = int.from_bytes(_index[idx_offs + 2 : idx_offs + 4], 'little')
    width = int.from_bytes(_font[offset:offset + 2], 'little')
    return _mvfont[offset + 2:next_offs], 16, width
 
